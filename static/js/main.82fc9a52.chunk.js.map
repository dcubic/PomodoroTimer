{"version":3,"sources":["StartConditionUpdater.js","Timer.js","App.js","index.js"],"names":["decrementStartTime","timeCurrent","incrementStartTime","BREAK","SESSION","STATE_ORIGINAL","isRunning","isBreak","minutesOriginal","secondsOriginal","minutesCurrent","secondsCurrent","breakLength","sessionLength","intervalID","Timer","props","state","decrementBreakTime","bind","decrementSessionTime","incrementBreakTime","incrementSessionTime","resetState","runTimer","toggleRunning","updateTimerLabel","stopAudio","minuteString","this","toString","secondString","document","getElementById","innerText","play","fieldToUpdate","lengthNext","stateNext","Error","setState","updateClockDisplay","breakLengthNext","updateStateToMatchSettings","sessionLengthNext","clearInterval","beeper","paused","pause","load","setInterval","minuteCurrent","secondCurrent","isBreakNext","minuteCurrentNext","secondCurrentNext","labelTextNext","className","id","hidden","src","type","onClick","htmlFor","React","Component","App","StrictMode","ReactDOM","render"],"mappings":"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","file":"static/js/main.82fc9a52.chunk.js","sourcesContent":["const TIME_MINIMUM = 1;\nconst TIME_MAXIMUM = 60;\n\nexport function decrementStartTime(timeCurrent) {\n    if (timeCurrent > TIME_MINIMUM) {\n        timeCurrent -= 1;\n    }\n    return timeCurrent;\n}\n\nexport function incrementStartTime(timeCurrent) {\n    if (timeCurrent < TIME_MAXIMUM) {\n        timeCurrent += 1;\n    }\n    return timeCurrent;\n}","import React from \"react\";\nimport { FaArrowCircleUp, FaArrowCircleDown, FaPlayCircle, FaRedoAlt } from \"react-icons/fa\";\nimport { decrementStartTime, incrementStartTime } from \"./StartConditionUpdater\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst BREAK = \"break\";\nconst SESSION = \"session\";\nconst STATE_ORIGINAL = {\n    isRunning: false,\n    isBreak: false,\n    minutesOriginal: 25,\n    secondsOriginal: 0,\n    minutesCurrent: 25,\n    secondsCurrent: 0,\n    breakLength: 5,\n    sessionLength: 25,\n    intervalID: null\n};\n\nexport class Timer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = STATE_ORIGINAL;\n        this.decrementBreakTime = this.decrementBreakTime.bind(this);\n        this.decrementSessionTime = this.decrementSessionTime.bind(this);\n        this.incrementBreakTime = this.incrementBreakTime.bind(this);\n        this.incrementSessionTime = this.incrementSessionTime.bind(this);\n        this.resetState = this.resetState.bind(this);\n        this.runTimer = this.runTimer.bind(this);\n        this.toggleRunning = this.toggleRunning.bind(this);\n        this.updateTimerLabel = this.updateTimerLabel.bind(this);\n        this.stopAudio = this.stopAudio.bind(this);\n    }\n\n    updateClockDisplay() {\n        let minuteString = this.state.minutesCurrent.toString();\n        if (this.state.minutesCurrent < 10) {\n            minuteString = \"0\" + minuteString;\n        }\n        let secondString = this.state.secondsCurrent.toString();\n        if (this.state.secondsCurrent < 10) {\n            secondString = \"0\" + secondString;\n        }\n\n        document.getElementById(\"time-left\").innerText = minuteString + \":\" + secondString;\n        if (minuteString === \"00\" && secondString === \"00\") {\n            document.getElementById(\"beep\").play();\n        }\n    }\n\n    updateStateToMatchSettings(fieldToUpdate, lengthNext) {\n        let stateNext = { ...this.state };\n        if (fieldToUpdate === BREAK) {\n            stateNext.breakLength = lengthNext;\n        } else if (fieldToUpdate === SESSION) {\n            stateNext.sessionLength = lengthNext;\n        } else {\n            throw new Error(\"Invalid fieldToUpdate parameter used\");\n        }\n\n        if ((fieldToUpdate === BREAK && this.state.isBreak) || (fieldToUpdate === SESSION && !this.state.isBreak)) {\n            stateNext.minutesCurrent = lengthNext;\n            stateNext.secondsCurrent = 0;\n        }\n        this.setState(stateNext, this.updateClockDisplay);\n    }\n\n    decrementBreakTime() {\n        if (!this.state.isRunning) {\n            const breakLengthNext = decrementStartTime(this.state.breakLength);\n            this.updateStateToMatchSettings(BREAK, breakLengthNext);\n        }\n    }\n\n    incrementBreakTime() {\n        if (!this.state.isRunning) {\n            const breakLengthNext = incrementStartTime(this.state.breakLength);\n            this.updateStateToMatchSettings(BREAK, breakLengthNext);\n        }\n    }\n\n    decrementSessionTime() {\n        if (!this.state.isRunning) {\n            const sessionLengthNext = decrementStartTime(this.state.sessionLength);\n            this.updateStateToMatchSettings(SESSION, sessionLengthNext);\n        }\n    }\n\n    incrementSessionTime() {\n        if (!this.state.isRunning) {\n            const sessionLengthNext = incrementStartTime(this.state.sessionLength);\n            this.updateStateToMatchSettings(SESSION, sessionLengthNext);\n        }\n    }\n\n    resetState() {\n        if (this.state.isRunning) {\n            clearInterval(this.state.intervalID);\n        }\n        this.setState(STATE_ORIGINAL, () => {\n            this.updateClockDisplay();\n            this.updateTimerLabel();\n            this.stopAudio();\n        });\n    }\n\n    stopAudio() {\n        let beeper = document.getElementById(\"beep\");\n        if (!beeper.paused) {\n            beeper.pause();\n            beeper.load();\n        }\n    }\n\n    toggleRunning() {\n        if (this.state.isRunning) {\n            clearInterval(this.state.intervalID);\n            this.setState({\n                ...this.state,\n                isRunning: false\n            });\n        } else {\n            let intervalID = setInterval(this.runTimer, 1000);\n            this.setState({\n                ...this.state,\n                isRunning: true,\n                intervalID: intervalID\n            });\n\n        }\n    }\n\n    runTimer() {\n        let minuteCurrent = this.state.minutesCurrent;\n        let secondCurrent = this.state.secondsCurrent;\n\n        let isBreakNext = this.state.isBreak;\n        let minuteCurrentNext = minuteCurrent;\n        let secondCurrentNext = secondCurrent;\n\n        if (minuteCurrent === 0 && secondCurrent === 0) {\n            if (this.state.isBreak) {\n                isBreakNext = false;\n                minuteCurrentNext = this.state.sessionLength;\n            } else {\n                isBreakNext = true;\n                minuteCurrentNext = this.state.breakLength;\n            }\n            secondCurrentNext = 0;\n            \n        } else if (secondCurrent === 0) {\n            secondCurrentNext = 59;\n            minuteCurrentNext = minuteCurrentNext - 1;\n        } else {\n            secondCurrentNext = secondCurrent - 1;\n        }\n\n        this.setState({\n            ...this.state,\n            isBreak: isBreakNext,\n            minutesCurrent: minuteCurrentNext,\n            secondsCurrent: secondCurrentNext\n        }, () => {\n            this.updateClockDisplay();\n            this.updateTimerLabel();\n        });\n    }\n\n    updateTimerLabel() {\n        let labelTextNext;\n        if (this.state.isBreak) {\n            labelTextNext = BREAK;\n        } else {\n            labelTextNext = SESSION;\n        }\n        document.getElementById(\"timer-label\").innerText = labelTextNext;\n    }\n\n    render() {\n        return (\n            <div className=\"application-background white-font-colour\">\n                <label id=\"timer-label\" hidden>{SESSION}</label>\n                <audio id=\"beep\">\n                    <source src=\"https://sampleswap.com/samples-ghost/SOUND%20EFFECTS%20and%20NOISES/Electro%20and%20Synthetic/192[kb]clock_radio_alarm.wav.mp3\" />\n                </audio>\n                <div>\n                    <div id=\"time-left\" className=\"clock-display\">\n                        25:00\n                    </div>\n\n                    <div className=\"clock-buttons-grid\">\n                        <button id=\"start_stop\" type=\"button\" className=\"button\" onClick={this.toggleRunning}>\n                            <FaPlayCircle className=\"clock-icon\" />\n                        </button>\n                        <button id=\"reset\" type=\"button\" className=\"button\" onClick={this.resetState}>\n                            <FaRedoAlt className=\"clock-icon\" />\n                        </button>\n                    </div>\n                </div>\n                <div>\n                    <form className=\"timer-settings-grid\">\n                        <div className=\"label-settings-box\">\n                            <label id=\"session-label\" htmlFor=\"session-length\">Session Length</label>\n                            <div className=\"duration-settings-grid\">\n                                <button id=\"session-decrement\" type=\"button\" className=\"button\" onClick={this.decrementSessionTime}>\n                                    <FaArrowCircleDown className=\"clock-icon\" />\n                                </button>\n                                <div id=\"session-length\" className=\"text-display\">\n                                    {this.state.sessionLength}\n                                </div>\n                                <button id=\"session-increment\" type=\"button\" className=\"button\" onClick={this.incrementSessionTime}>\n                                    <FaArrowCircleUp className=\"clock-icon\" />\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"label-settings-box\">\n                            <label id=\"break-label\" htmlFor=\"break-length\">Break Length</label>\n                            <div className=\"duration-settings-grid\">\n                                <button id=\"break-decrement\" type=\"button\" className=\"button\" onClick={this.decrementBreakTime}>\n                                    <FaArrowCircleDown className=\"clock-icon\" />\n                                </button>\n                                <div id=\"break-length\" className=\"text-display\">\n                                    {this.state.breakLength}\n                                </div>\n                                <button id=\"break-increment\" type=\"button\" className=\"button\" onClick={this.incrementBreakTime}>\n                                    <FaArrowCircleUp className=\"clock-icon\" />\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './styles.css';\nimport { Timer } from \"./Timer.js\";\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <Timer />\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}